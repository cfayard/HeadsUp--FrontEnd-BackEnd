{"ast":null,"code":"import _slicedToArray from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState}from'react';import Modal from'@material-ui/core/Modal';import{Button,Input,InputLabel}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import{connect}from\"react-redux\";import{getTransactions}from\"../../actions/accountActions\";import{logoutUser}from\"../../actions/authActions\";import{Bar,Line,Pie}from'react-chartjs-2';import Visual from'../dashboard/Visual';var useStyles=makeStyles(function(theme){return{modal:{display:'flex',alignItems:'center',justifyContent:'center',color:'silver'},inputUnderline:{borderBottomColor:\"silver\"},fontColor:{fontColor:\"silver\"},paper:{backgroundColor:\"theme.palette.background.paper\",border:'2px solid #000',boxShadow:theme.shadows[5],padding:theme.spacing(2,4,3)}};});var Budget=function Budget(props){var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),totalIncome=_useState4[0],setTotalIncome=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),totalBill=_useState6[0],setTotalBill=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),totalExpense=_useState8[0],setTotalExpense=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),totalSavings=_useState10[0],setTotalSavings=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),totalLeisure=_useState12[0],setTotalLeisure=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),totalFood=_useState14[0],setTotalFood=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),totalEmergency=_useState16[0],setTotalEmergency=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),totalGas=_useState18[0],setTotalGas=_useState18[1];return React.createElement(\"div\",null,React.createElement(\"h1\",{style:{fontSize:\"22px\"}},\"If your anything like me, you need to budget....\\uD83D\\uDC47\"),React.createElement(\"a\",{href:\"/Dashboard\"},React.createElement(\"button\",{style:{color:'black',marginLeft:10,marginRight:10},className:\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"},\"Linked Accounts\")),React.createElement(\"button\",{style:{color:'black',marginLeft:10,marginRight:10},className:\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",onClick:function onClick(){return setOpen(!open);}},\"Projected Budget\"),React.createElement(\"a\",{href:\"/Visual\"},React.createElement(\"button\",{style:{color:'black',marginLeft:10,marginRight:10},className:\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",onClick:function onClick(){return setOpen(!open);}},\"Visual\")),React.createElement(\"a\",{href:'/'},React.createElement(\"button\",{onClick:function onClick(){return props.logoutUser();},style:{color:'springgreen',marginLeft:10,marginRight:10}},\"Logout\")),React.createElement(Modal,{className:classes.modal,open:open},React.createElement(\"div\",{style:{width:700,height:650,backgroundColor:'black'}},React.createElement(\"div\",{style:{width:'100%',height:'100%',display:'flex',flexDirection:'row',justifyContent:'space-between'}},React.createElement(\"div\",{style:{width:'30%'}},React.createElement(\"div\",{onClick:function onClick(){return setOpen(!open);}},\"X\"),React.createElement(InputLabel,{style:{color:\"springgreen\"}},\"Total Income:\"),React.createElement(Input,{style:{color:'white'},onChange:function onChange(val){return setTotalIncome(val.target.value);}}),totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas,React.createElement(\"br\",null),React.createElement(InputLabel,{style:{color:\"springgreen\"}},\"Total Bills:\"),React.createElement(Input,{style:{color:'white'},onChange:function onChange(val){return setTotalBill(val.target.value);}}),totalIncome-totalBill,React.createElement(\"br\",null),React.createElement(InputLabel,{style:{color:\"springgreen\"}},\"Total Expenses:\"),React.createElement(Input,{style:{color:'white'},onChange:function onChange(val){return setTotalExpense(val.target.value);}}),totalIncome-totalBill-totalExpense,React.createElement(\"br\",null),React.createElement(InputLabel,{style:{color:\"springgreen\"}},\"Total Savings:\"),React.createElement(Input,{style:{color:'white'},onChange:function onChange(val){return setTotalSavings(val.target.value);}}),totalIncome-totalBill-totalExpense-totalSavings,React.createElement(\"br\",null),React.createElement(InputLabel,{style:{color:\"springgreen\"}},\"Total Gas:\"),React.createElement(Input,{style:{color:'white'},onChange:function onChange(val){return setTotalGas(val.target.value);}}),totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas,React.createElement(\"br\",null),React.createElement(InputLabel,{style:{color:\"springgreen\"}},\"Total Leisure:\"),React.createElement(Input,{style:{color:'white'},onChange:function onChange(val){return setTotalLeisure(val.target.value);}}),totalIncome-totalBill-totalExpense-totalSavings-totalLeisure,React.createElement(\"br\",null),React.createElement(InputLabel,{style:{color:\"springgreen\"}},\"Total Grocery:\"),React.createElement(Input,{style:{color:'white'},onChange:function onChange(val){return setTotalFood(val.target.value);}}),totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood,React.createElement(\"br\",null),React.createElement(InputLabel,{style:{color:\"springgreen\"}},\"Total Emergency:\"),React.createElement(Input,{style:{color:'white'},onChange:function onChange(val){return setTotalEmergency(val.target.value);}}),totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency,React.createElement(\"br\",null),React.createElement(InputLabel,{style:{color:\"springgreen\"}},\" \",React.createElement(\"div\",{style:{color:'white'}},\"Total Remaining:\",React.createElement(\"h4\",{style:{color:'red'}},totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas),\" \")),React.createElement(\"br\",null)),React.createElement(\"div\",{style:{width:'70%',paddingTop:'100px'}},React.createElement(Pie,{data:{labels:['Bills','Expenses','Savings','Gas','Leisure','Grocery','Emergency'],datasets:[{label:'Percent',data:[totalBill/totalIncome*0.10*100,totalExpense/totalIncome*0.10*100,totalSavings/totalIncome*0.10*100,totalGas/totalIncome*0.10*100,totalLeisure/totalIncome*0.10*100,totalFood/totalIncome*0.10*100,totalEmergency/totalIncome*0.10*100//    (totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas),\n],backgroundColor:['lime','orange','blue','yellow','purple','aqua','springgreen']}]}}),React.createElement(\"br\",null),React.createElement(Bar,{data:{labels:['Bills','Expenses','Savings','Gas','Leisure','Grocery','Emergency','Remaining'],datasets:[{label:'Total',data:[totalBill,totalExpense,totalSavings,totalGas,totalLeisure,totalFood,totalEmergency,totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas],backgroundColor:['lime','orange','blue','yellow','purple','aqua','springgreen','red']}]}}),React.createElement(\"div\",null))))));};var mapStateToProps=function mapStateToProps(state){return{plaid:state.plaid};};export default connect(mapStateToProps,{logoutUser:logoutUser,getTransactions:getTransactions})(Budget);","map":{"version":3,"sources":["/Users/TerminusX/Desktop/budget-app/client/budget-app/src/components/dashboard/Budget.js"],"names":["React","Component","useState","Modal","Button","Input","InputLabel","makeStyles","connect","getTransactions","logoutUser","Bar","Line","Pie","Visual","useStyles","theme","modal","display","alignItems","justifyContent","color","inputUnderline","borderBottomColor","fontColor","paper","backgroundColor","border","boxShadow","shadows","padding","spacing","Budget","props","classes","open","setOpen","totalIncome","setTotalIncome","totalBill","setTotalBill","totalExpense","setTotalExpense","totalSavings","setTotalSavings","totalLeisure","setTotalLeisure","totalFood","setTotalFood","totalEmergency","setTotalEmergency","totalGas","setTotalGas","fontSize","marginLeft","marginRight","width","height","flexDirection","val","target","value","paddingTop","labels","datasets","label","data","mapStateToProps","state","plaid"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    getTransactions,\n  \n  } from \"../../actions/accountActions\";\n  import { logoutUser } from \"../../actions/authActions\";\n\n  import {Bar, Line, Pie} from 'react-chartjs-2'\n\nimport Visual from '../dashboard/Visual'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'silver'\n    },\n    inputUnderline: {borderBottomColor: \"silver\"},\n    fontColor: {fontColor: \"silver\"},\n    paper: {\n      backgroundColor: \"theme.palette.background.paper\",\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\nconst Budget = props => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [totalIncome, setTotalIncome] = useState(0)\n    const [totalBill, setTotalBill] = useState(0)\n    const [totalExpense, setTotalExpense] = useState(0)\n    const [totalSavings, setTotalSavings] = useState(0)\n    const [totalLeisure, setTotalLeisure] = useState(0)\n    const [totalFood, setTotalFood] = useState(0)\n    const [totalEmergency, setTotalEmergency] = useState(0)\n    const [totalGas, setTotalGas] = useState(0)\n\n  \n\n       \n        return (\n            <div >\n\n                <h1 style={{\n                    fontSize: \"22px\"\n                }}>\n                    If your anything like me, you need to budget....👇\n                </h1>\n                \n                <a href=\"/Dashboard\">\n                    <button style={{color:'black', marginLeft:10,marginRight:10}} className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\">\n                        Linked Accounts\n                    </button>\n                </a>\n                <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\" onClick={()=> setOpen(!open)}>\n                    Projected Budget\n                </button>\n                <a href='/Visual'>\n                <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\" onClick={()=> setOpen(!open)}>\n                    Visual\n                </button>\n                </a>\n                {/* <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\" onClick={()=> setOpen(!open)}>\n                    Dashboard\n                </button> */}\n                \n                  <a href={'/'}>\n                <button onClick={()=>props.logoutUser()} style={{color:'springgreen', marginLeft:10,marginRight:10}}>\n                    Logout\n                </button>\n                </a>  \n\n\n\n                <Modal \n                className={classes.modal}     \n                open={open} \n                >\n                    \n                    <div style={{width:700,height:650, backgroundColor:'black'}}>\n                        <div style={{width:'100%', height:'100%', display:'flex', flexDirection:'row', justifyContent:'space-between'}}>\n                        <div style={{width:'30%'}}>\n                        <div onClick={()=>setOpen(!open)}>X</div>\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Income:\n                        </InputLabel>\n                        <Input \n                            style={{color: 'white'}}\n                            onChange={(val)=>setTotalIncome(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Bills:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalBill(val.target.value)}\n                        />\n                        {totalIncome-totalBill}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Expenses:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalExpense(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Savings:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalSavings(val.target.value)}\n                        />\n                        {/* {(totalSavings/100)*totalIncome} */}\n                        {totalIncome-totalBill-totalExpense-totalSavings}\n\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Gas:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalGas(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Leisure:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalLeisure(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Grocery:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalFood(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Emergency:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalEmergency(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency}\n                        <br />\n                        \n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}> <div style={{color:'white'}}>\n                            Total Remaining:\n                            <h4 style={{color:'red'}}>{totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas}</h4> </div>\n                        </InputLabel>\n                        \n                        <br />\n                    </div>\n                    \n                   <div style={{width:'70%',paddingTop:'100px'}}>\n                   <Pie\n                   \n                   data={{\n                       labels: ['Bills', 'Expenses', 'Savings', 'Gas', 'Leisure','Grocery', 'Emergency'],\n                       datasets:[\n                           {\n                               label: 'Percent',\n                               data: [\n                                   (totalBill/totalIncome)*0.10 * 100,\n                                   (totalExpense/totalIncome)*0.10 * 100,\n                                   (totalSavings/totalIncome)*0.10 * 100,\n                                   (totalGas/totalIncome)*0.10*100,\n                                  (totalLeisure/totalIncome)*0.10*100,\n                                   (totalFood/totalIncome)*0.10*100,\n                                   (totalEmergency/totalIncome)*0.10*100,\n                                //    (totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas),\n                               ],\n                               backgroundColor:[\n                                'lime',\n                                'orange',\n                                'blue',\n                                'yellow',\n                                'purple',\n                                'aqua',\n                                'springgreen'\n                               ]\n                           }\n                       ]\n                   }}\n                   />\n                   <br />\n                   \n                    <Bar \n                   \n                    data={{\n                        labels: ['Bills', 'Expenses', 'Savings', 'Gas', 'Leisure','Grocery', 'Emergency','Remaining'],\n                        datasets:[\n                            {\n                                label: 'Total',\n                                data: [\n                                    totalBill,\n                                    totalExpense,\n                                    totalSavings,\n                                    totalGas,\n                                    totalLeisure,\n                                    totalFood,\n                                    totalEmergency,\n                                    (totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas),\n                                    \n                                ],\n                                backgroundColor:[\n                                    'lime',\n                                    'orange',\n                                    'blue',\n                                    'yellow',\n                                    'purple',\n                                    'aqua',\n                                    'springgreen',\n                                    'red'\n                                ]\n                            }\n                        ]\n                    }}\n                    />\n                    <div>\n                    \n                   </div>\n                    </div>\n                    </div>\n                    </div>\n                \n                    \n                     \n                </Modal>\n\n\n            </div>\n            \n        )\n    \n}\n\n  \nconst mapStateToProps = state => ({\n    plaid: state.plaid\n  });\n  export default connect(\n    mapStateToProps,\n    { logoutUser, getTransactions }\n  )(Budget);"]},"metadata":{},"sourceType":"module"}