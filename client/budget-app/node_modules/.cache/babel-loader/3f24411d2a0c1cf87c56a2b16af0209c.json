{"ast":null,"code":"import axios from\"axios\";import{ADD_ACCOUNT,DELETE_ACCOUNT,GET_ACCOUNTS,ACCOUNTS_LOADING,GET_TRANSACTIONS,TRANSACTIONS_LOADING}from\"./types\";// Actions will go here\n// Add account\nexport var addAccount=function addAccount(plaidData){return function(dispatch){var accounts=plaidData.accounts;axios.post(\"/api/plaid/accounts/add\",plaidData).then(function(res){return dispatch({type:ADD_ACCOUNT,payload:res.data});}).then(function(data){return accounts?dispatch(getTransactions(accounts.concat(data.payload))):null;}).catch(function(err){return console.log(err);});};};// Delete account\nexport var deleteAccount=function deleteAccount(plaidData){return function(dispatch){if(window.confirm(\"Are you sure you want to remove this account?\")){var id=plaidData.id;var newAccounts=plaidData.accounts.filter(function(account){return account._id!==id;});axios.delete(\"/api/plaid/accounts/\".concat(id)).then(function(res){return dispatch({type:DELETE_ACCOUNT,payload:id});}).then(newAccounts?dispatch(getTransactions(newAccounts)):null).catch(function(err){return console.log(err);});}};};// Get all accounts for specific user\nexport var getAccounts=function getAccounts(){return function(dispatch){dispatch(setAccountsLoading());axios.get(\"/api/plaid/accounts\").then(function(res){return dispatch({type:GET_ACCOUNTS,payload:res.data});}).catch(function(err){return dispatch({type:GET_ACCOUNTS,payload:null});});};};// Accounts loading\nexport var setAccountsLoading=function setAccountsLoading(){return{type:ACCOUNTS_LOADING};};// Get Transactions\nexport var getTransactions=function getTransactions(plaidData){return function(dispatch){dispatch(setTransactionsLoading());axios.post(\"/api/plaid/accounts/transactions\",plaidData).then(function(res){return dispatch({type:GET_TRANSACTIONS,payload:res.data});}).catch(function(err){return dispatch({type:GET_TRANSACTIONS,payload:null});});};};// Transactions loading\nexport var setTransactionsLoading=function setTransactionsLoading(){return{type:TRANSACTIONS_LOADING};};","map":{"version":3,"sources":["/Users/TerminusX/Desktop/budget-app/client/budget-app/src/actions/accountActions.js"],"names":["axios","ADD_ACCOUNT","DELETE_ACCOUNT","GET_ACCOUNTS","ACCOUNTS_LOADING","GET_TRANSACTIONS","TRANSACTIONS_LOADING","addAccount","plaidData","dispatch","accounts","post","then","res","type","payload","data","getTransactions","concat","catch","err","console","log","deleteAccount","window","confirm","id","newAccounts","filter","account","_id","delete","getAccounts","setAccountsLoading","get","setTransactionsLoading"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  ADD_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING\n} from \"./types\";\n// Actions will go here\n\n// Add account\nexport const addAccount = plaidData => dispatch => {\n    const accounts = plaidData.accounts;\n    axios\n      .post(\"/api/plaid/accounts/add\", plaidData)\n      .then(res =>\n        dispatch({\n          type: ADD_ACCOUNT,\n          payload: res.data\n        })\n      )\n      .then(data =>\n        accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Delete account\nexport const deleteAccount = plaidData => dispatch => {\n    if (window.confirm(\"Are you sure you want to remove this account?\")) {\n      const id = plaidData.id;\n      const newAccounts = plaidData.accounts.filter(\n        account => account._id !== id\n      );\n      axios\n        .delete(`/api/plaid/accounts/${id}`)\n        .then(res =>\n          dispatch({\n            type: DELETE_ACCOUNT,\n            payload: id\n          })\n        )\n        .then(newAccounts ? dispatch(getTransactions(newAccounts)) : null)\n        .catch(err => console.log(err));\n    }\n  };\n\n  // Get all accounts for specific user\nexport const getAccounts = () => dispatch => {\n    dispatch(setAccountsLoading());\n    axios\n      .get(\"/api/plaid/accounts\")\n      .then(res =>\n        dispatch({\n          type: GET_ACCOUNTS,\n          payload: res.data\n        })\n      )\n      .catch(err =>\n        dispatch({\n          type: GET_ACCOUNTS,\n          payload: null\n        })\n      );\n  };\n  // Accounts loading\n  export const setAccountsLoading = () => {\n    return {\n      type: ACCOUNTS_LOADING\n    };\n  };\n\n  // Get Transactions\nexport const getTransactions = plaidData => dispatch => {\n    dispatch(setTransactionsLoading());\n    axios\n      .post(\"/api/plaid/accounts/transactions\", plaidData)\n      .then(res =>\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: res.data\n        })\n      )\n      .catch(err =>\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: null\n        })\n      );\n  };\n  // Transactions loading\n  export const setTransactionsLoading = () => {\n    return {\n      type: TRANSACTIONS_LOADING\n    };\n  };"]},"metadata":{},"sourceType":"module"}