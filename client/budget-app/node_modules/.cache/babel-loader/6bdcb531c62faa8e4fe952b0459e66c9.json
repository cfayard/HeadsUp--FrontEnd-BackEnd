{"ast":null,"code":"var _jsxFileName = \"/Users/TerminusX/Desktop/budget-app/client/budget-app/src/components/dashboard/Budget.js\";\nimport React, { Component, useState } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getTransactions } from \"../../actions/accountActions\";\nimport { logoutUser } from \"../../actions/authActions\";\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputUnderline: {\n    borderBottomColor: \"silver\"\n  },\n  fontColor: {\n    fontColor: \"silver\"\n  },\n  paper: {\n    backgroundColor: \"theme.palette.background.paper\",\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst Budget = props => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalBill, setTotalBill] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const [totalSavings, setTotalSavings] = useState(0);\n  const [totalLeisure, setTotalLeisure] = useState(0);\n  const [totalFood, setTotalFood] = useState(0);\n  const [totalEmergency, setTotalEmergency] = useState(0);\n  const [budgetCalc, setBudgetCalc] = useState([]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      fontSize: \"22px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"If your anything like me, you need to budget....\\uD83D\\uDC47\"), React.createElement(\"a\", {\n    href: \"/Dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: {\n      color: 'black',\n      marginLeft: 10,\n      marginRight: 10\n    },\n    className: \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Linked Accounts\")), React.createElement(\"button\", {\n    style: {\n      color: 'black',\n      marginLeft: 10,\n      marginRight: 10\n    },\n    className: \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",\n    onClick: () => setOpen(!open),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Projected Budget\"), React.createElement(\"button\", {\n    style: {\n      color: 'black',\n      marginLeft: 10,\n      marginRight: 10\n    },\n    className: \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",\n    onClick: () => setOpen(!open),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Actual Budget\"), React.createElement(\"button\", {\n    style: {\n      color: 'black',\n      marginLeft: 10,\n      marginRight: 10\n    },\n    className: \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",\n    onClick: () => setOpen(!open),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"button\", {\n    style: {\n      color: 'black',\n      marginLeft: 10,\n      marginRight: 10\n    },\n    className: \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",\n    onClick: console.log('truth'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Logout\"), React.createElement(Modal, {\n    className: classes.modal,\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: 600,\n      height: 500,\n      backgroundColor: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => setOpen(!open),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"X\"), React.createElement(InputLabel, {\n    style: {\n      color: \"springgreen\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Total Income:\"), React.createElement(Input, {\n    onChange: val => setTotalIncome(val.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), totalIncome, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(InputLabel, {\n    style: {\n      color: \"springgreen\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Total Bill:\"), React.createElement(Input, {\n    onChange: val => setTotalBill(val.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), totalIncome - totalBill, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(InputLabel, {\n    style: {\n      color: \"springgreen\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Total Expense:\"), React.createElement(Input, {\n    onChange: val => setTotalExpense(val.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), totalExpense, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(InputLabel, {\n    style: {\n      color: \"springgreen\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Total Savings:\"), React.createElement(Input, {\n    onChange: val => setTotalSavings(val.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), totalSavings / 100 * totalIncome, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(InputLabel, {\n    style: {\n      color: \"springgreen\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Total Leisure:\"), React.createElement(Input, {\n    onChange: val => setTotalLeisure(val.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), totalLeisure, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(InputLabel, {\n    style: {\n      color: \"springgreen\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Total Food:\"), React.createElement(Input, {\n    onChange: val => setTotalFood(val.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), totalFood, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(InputLabel, {\n    style: {\n      color: \"springgreen\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Total Emergency:\"), React.createElement(Input, {\n    onChange: val => setTotalEmergency(val.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), totalEmergency, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  plaid: state.plaid\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  getTransactions\n})(Budget);","map":{"version":3,"sources":["/Users/TerminusX/Desktop/budget-app/client/budget-app/src/components/dashboard/Budget.js"],"names":["React","Component","useState","Modal","Button","Input","InputLabel","makeStyles","PropTypes","connect","getTransactions","logoutUser","useStyles","theme","modal","display","alignItems","justifyContent","inputUnderline","borderBottomColor","fontColor","paper","backgroundColor","border","boxShadow","shadows","padding","spacing","Budget","props","classes","open","setOpen","totalIncome","setTotalIncome","totalBill","setTotalBill","totalExpense","setTotalExpense","totalSavings","setTotalSavings","totalLeisure","setTotalLeisure","totalFood","setTotalFood","totalEmergency","setTotalEmergency","budgetCalc","setBudgetCalc","fontSize","color","marginLeft","marginRight","console","log","width","height","val","target","value","mapStateToProps","state","plaid"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    getTransactions,\n  \n  } from \"../../actions/accountActions\";\n  import { logoutUser } from \"../../actions/authActions\";\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputUnderline: {borderBottomColor: \"silver\"},\n    fontColor: {fontColor: \"silver\"},\n    paper: {\n      backgroundColor: \"theme.palette.background.paper\",\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\nconst Budget = props => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [totalIncome, setTotalIncome] = useState(0)\n    const [totalBill, setTotalBill] = useState(0)\n    const [totalExpense, setTotalExpense] = useState(0)\n    const [totalSavings, setTotalSavings] = useState(0)\n    const [totalLeisure, setTotalLeisure] = useState(0)\n    const [totalFood, setTotalFood] = useState(0)\n    const [totalEmergency, setTotalEmergency] = useState(0)\n\n    const [budgetCalc, setBudgetCalc] = useState([])\n\n       \n        return (\n            <div >\n\n                <h1 style={{\n                    fontSize: \"22px\"\n                }}>\n                    If your anything like me, you need to budget....👇\n                </h1>\n                <a href=\"/Dashboard\">\n                    <button style={{color:'black', marginLeft:10,marginRight:10}} className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\">\n                        Linked Accounts\n                    </button>\n                </a>\n                <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\" onClick={()=> setOpen(!open)}>\n                    Projected Budget\n                </button>\n                <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\" onClick={()=> setOpen(!open)}>\n                    Actual Budget\n                </button>\n                <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\" onClick={()=> setOpen(!open)}>\n                    Dashboard\n                </button>\n                <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"\n                onClick=\n                    {console.log('truth')}\n                >\n                    Logout\n                </button>\n\n                <Modal \n                className={classes.modal}     \n                open={open} \n                >\n                    <div style={{width:600,height:500, backgroundColor:'black'}}>\n                        <div onClick={()=>setOpen(!open)}>X</div>\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Income:\n                        </InputLabel>\n                        <Input \n                            onChange={(val)=>setTotalIncome(val.target.value)}\n                        />\n                        {totalIncome}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Bill:\n                        </InputLabel>\n                        <Input \n                            onChange={(val)=>setTotalBill(val.target.value)}\n                        />\n                        {totalIncome-totalBill}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Expense:\n                        </InputLabel>\n                        <Input \n                            onChange={(val)=>setTotalExpense(val.target.value)}\n                        />\n                        {totalExpense}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Savings:\n                        </InputLabel>\n                        <Input \n                            onChange={(val)=>setTotalSavings(val.target.value)}\n                        />\n                        {(totalSavings/100)*totalIncome}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Leisure:\n                        </InputLabel>\n                        <Input \n                            onChange={(val)=>setTotalLeisure(val.target.value)}\n                        />\n                        {totalLeisure}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Food:\n                        </InputLabel>\n                        <Input \n                            onChange={(val)=>setTotalFood(val.target.value)}\n                        />\n                        {totalFood}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Emergency:\n                        </InputLabel>\n                        <Input \n                            onChange={(val)=>setTotalEmergency(val.target.value)}\n                        />\n                        {totalEmergency}\n                        <br />\n                    </div>\n\n                    \n                </Modal>\n\n\n            </div>\n            \n        )\n    \n}\n\n  \nconst mapStateToProps = state => ({\n    plaid: state.plaid\n  });\n  export default connect(\n    mapStateToProps,\n    { logoutUser, getTransactions }\n  )(Budget);"]},"metadata":{},"sourceType":"module"}