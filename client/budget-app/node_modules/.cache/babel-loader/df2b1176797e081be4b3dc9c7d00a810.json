{"ast":null,"code":"import _classCallCheck from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import PlaidLinkButton from\"react-plaid-link-button\";import{connect}from\"react-redux\";import{getTransactions,addAccount,deleteAccount}from\"../../actions/accountActions\";import{logoutUser}from\"../../actions/authActions\";import MaterialTable from\"material-table\";// https://mbrn.github.io/material-table/#/\nimport{css}from\"emotion\";var tableStyle={\".table-div\":{backgroundColor:\"grey\"},\".table-cell\":{padding:\"0px\"}};var Accounts=/*#__PURE__*/function(_Component){_inherits(Accounts,_Component);function Accounts(){var _getPrototypeOf2;var _this;_classCallCheck(this,Accounts);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Accounts)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.handleOnSuccess=function(token,metadata){var accounts=_this.props.accounts;var plaidData={public_token:token,metadata:metadata,accounts:accounts};_this.props.addAccount(plaidData);};_this.onDeleteClick=function(id){var accounts=_this.props.accounts;var accountData={id:id,accounts:accounts};_this.props.deleteAccount(accountData);};_this.onLogoutClick=function(e){e.preventDefault();_this.props.logoutUser();};return _this;}_createClass(Accounts,[{key:\"componentDidMount\",value:function componentDidMount(){var accounts=this.props.accounts;this.props.getTransactions(accounts);}// Add account\n},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,user=_this$props.user,accounts=_this$props.accounts;var _this$props$plaid=this.props.plaid,transactions=_this$props$plaid.transactions,transactionsLoading=_this$props$plaid.transactionsLoading;var accountItems=accounts.map(function(account){return React.createElement(\"li\",{key:account._id,style:{marginTop:\"1rem\"}},React.createElement(\"button\",{style:{marginRight:\"1rem\"},onClick:_this2.onDeleteClick.bind(_this2,account._id),className:\"btn btn-small btn-floating waves-effect waves-light hoverable red accent-3\"},React.createElement(\"i\",{className:\"material-icons\"},\"delete\")),React.createElement(\"b\",null,account.institutionName));});// Setting up data table\nvar transactionsColumns=[{title:\"Account\",field:\"account\"},{title:\"Date\",field:\"date\",type:\"date\",defaultSort:\"desc\"},{title:\"Name\",field:\"name\"},{title:\"Amount\",field:\"amount\"},{title:\"Category\",field:\"category\"}];var transactionsData=[];transactions.forEach(function(account){account.transactions.forEach(function(transaction){transactionsData.push({account:account.accountName,date:transaction.date,category:transaction.category[0],name:transaction.name,amount:transaction.amount});});});return React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col s12\"},React.createElement(\"button\",{onClick:this.onLogoutClick,className:\"btn-flat waves-effect\"},React.createElement(\"i\",{className:\"material-icons left\"},\"keyboard_backspace\"),\" Log Out\"),React.createElement(\"a\",{href:\"/Budget\"},React.createElement(\"button\",{className:\"btn-flat waves-effect\"},React.createElement(\"i\",{className:\"material-icons left\"}),\" Budget\")),React.createElement(\"h4\",null,React.createElement(\"b\",null,\"Welcome!\")),React.createElement(\"p\",{className:\"grey-text text-darken-1\"},\"Hey there, \",user.name.split(\" \")[0]),React.createElement(\"h5\",null,React.createElement(\"b\",null,\"Linked Accounts\")),React.createElement(\"p\",{className:\"grey-text text-darken-1\"},\"Add or remove your bank accounts below\"),React.createElement(\"ul\",null,accountItems),React.createElement(PlaidLinkButton,{buttonProps:{className:\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"},plaidLinkProps:{clientName:\"Budget-App\",key:\"c3d4359494f762298793738f10eda6\",env:\"sandbox\",product:[\"transactions\"],onSuccess:this.handleOnSuccess},onScriptLoad:function onScriptLoad(){return _this2.setState({loaded:true});}},\"Add Account\"),React.createElement(\"hr\",{style:{marginTop:\"2rem\",opacity:\".2\"}}),React.createElement(\"h5\",null,React.createElement(\"b\",null,\"Transactions\")),transactionsLoading?React.createElement(\"p\",{className:\"grey-text text-darken-1\"},\"Fetching transactions...\"):React.createElement(React.Fragment,null,React.createElement(\"p\",{style:{color:'white'},className:\"grey-text text-darken-1\"},\"You have \",React.createElement(\"b\",{style:{color:\"white\",backgroundColor:\"green\"}},transactionsData.length),\" transactions from your\",React.createElement(\"b\",null,\" \",accounts.length),\" linked\",accounts.length>1?React.createElement(\"span\",null,\" accounts \"):React.createElement(\"span\",null,\" accounts \"),\"from the past 90 days\"),React.createElement(MaterialTable,{className:css(tableStyle),columns:transactionsColumns,data:transactionsData,title:\"Search Transactions\"}))));}}]);return Accounts;}(Component);var mapStateToProps=function mapStateToProps(state){return{plaid:state.plaid};};export default connect(mapStateToProps,{logoutUser:logoutUser,getTransactions:getTransactions,addAccount:addAccount,deleteAccount:deleteAccount})(Accounts);","map":{"version":3,"sources":["/Users/TerminusX/Desktop/budget-app/client/budget-app/src/components/dashboard/Accounts.js"],"names":["React","Component","PlaidLinkButton","connect","getTransactions","addAccount","deleteAccount","logoutUser","MaterialTable","css","tableStyle","backgroundColor","padding","Accounts","handleOnSuccess","token","metadata","accounts","props","plaidData","public_token","onDeleteClick","id","accountData","onLogoutClick","e","preventDefault","user","plaid","transactions","transactionsLoading","accountItems","map","account","_id","marginTop","marginRight","bind","institutionName","transactionsColumns","title","field","type","defaultSort","transactionsData","forEach","transaction","push","accountName","date","category","name","amount","split","className","clientName","key","env","product","onSuccess","setState","loaded","opacity","color","length","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getTransactions,\n  addAccount,\n  deleteAccount\n} from \"../../actions/accountActions\";\n\nimport { logoutUser } from \"../../actions/authActions\";\n\nimport MaterialTable from \"material-table\"; // https://mbrn.github.io/material-table/#/\n\nimport { css } from \"emotion\"\n \nconst tableStyle = {\n    \".table-div\": {\n        backgroundColor: \"grey\"\n    },\n    \".table-cell\": {\n        padding: \"0px\"\n    }}\n\nclass Accounts extends Component {\n  componentDidMount() {\n    const { accounts } = this.props;\n    this.props.getTransactions(accounts);\n  }\n// Add account\n  handleOnSuccess = (token, metadata) => {\n    const { accounts } = this.props;\n    const plaidData = {\n      public_token: token,\n      metadata: metadata,\n      accounts: accounts\n    };\nthis.props.addAccount(plaidData);\n  };\n// Delete account\n  onDeleteClick = id => {\n    const { accounts } = this.props;\n    const accountData = {\n      id: id,\n      accounts: accounts\n    };\n    this.props.deleteAccount(accountData);\n  };\n// Logout\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\nrender() {\n    const { user, accounts } = this.props;\n    const { transactions, transactionsLoading } = this.props.plaid;\n\nlet accountItems = accounts.map(account => (\n      <li key={account._id} style={{ marginTop: \"1rem\" }}>\n        <button\n          style={{ marginRight: \"1rem\" }}\n          onClick={this.onDeleteClick.bind(this, account._id)}\n          className=\"btn btn-small btn-floating waves-effect waves-light hoverable red accent-3\"\n        >\n          <i className=\"material-icons\">delete</i>\n        </button>\n        <b>{account.institutionName}</b>\n      </li>\n    ));\n// Setting up data table\n    const transactionsColumns = [\n      { title: \"Account\", field: \"account\" },\n      { title: \"Date\", field: \"date\", type: \"date\", defaultSort: \"desc\" },\n      { title: \"Name\", field: \"name\" },\n      { title: \"Amount\", field: \"amount\" },\n      { title: \"Category\", field: \"category\" }\n    ];\nlet transactionsData = [];\n    transactions.forEach(function(account) {\n      account.transactions.forEach(function(transaction) {\n        transactionsData.push({\n          account: account.accountName,\n          date: transaction.date,\n          category: transaction.category[0],\n          name: transaction.name,\n          amount: transaction.amount\n        });\n      });\n    });\nreturn (\n      <div className=\"row\">\n       \n        <div className=\"col s12\">\n          <button\n            onClick={this.onLogoutClick}\n            className=\"btn-flat waves-effect\"\n          >\n            <i className=\"material-icons left\">keyboard_backspace</i> Log Out\n          </button>\n          <a href='/Budget'>\n          <button\n            \n            className=\"btn-flat waves-effect\"\n          >\n            <i className=\"material-icons left\"></i> Budget\n          </button>\n          </a>\n          <h4>\n            <b>Welcome!</b>\n          </h4>\n          <p className=\"grey-text text-darken-1\">\n            Hey there, {user.name.split(\" \")[0]}\n          </p>\n          <h5>\n            <b>Linked Accounts</b>\n          </h5>\n          <p className=\"grey-text text-darken-1\">\n            Add or remove your bank accounts below\n          </p>\n          <ul>{accountItems}</ul>\n          <PlaidLinkButton\n            buttonProps={{\n              className:\n                \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"\n            }}\n            \n            plaidLinkProps={{\n              clientName: \"Budget-App\",\n              key: \"c3d4359494f762298793738f10eda6\",\n              env: \"sandbox\",\n              product: [\"transactions\"],\n              onSuccess: this.handleOnSuccess\n            }}\n            onScriptLoad={() => this.setState({ loaded: true })}\n           \n          >\n            Add Account\n          </PlaidLinkButton>\n          <hr style={{ marginTop: \"2rem\", opacity: \".2\" }} />\n          <h5>\n            <b>Transactions</b>\n          </h5>\n          {transactionsLoading ? (\n            <p className=\"grey-text text-darken-1\">Fetching transactions...</p>\n          ) : (\n            <>\n              <p style={{\n                color: 'white'\n              }} className=\"grey-text text-darken-1\">\n                You have <b  style={{\n                  color: \"white\",\n                  backgroundColor: \"green\"\n                }}>{transactionsData.length}</b> transactions from your\n                <b> {accounts.length}</b> linked\n                {accounts.length > 1 ? (\n                  <span> accounts </span>\n                ) : (\n                  <span> accounts </span>\n                )}\n                from the past 90 days\n              </p>\n              <MaterialTable\n              className={css(tableStyle)}\n                columns={transactionsColumns}\n                data={transactionsData}\n                title=\"Search Transactions\"\n              />\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nAccounts.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getTransactions: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  accounts: PropTypes.array.isRequired,\n  plaid: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  plaid: state.plaid\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser, getTransactions, addAccount, deleteAccount }\n)(Accounts);"]},"metadata":{},"sourceType":"module"}