{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nvar PlaidLinkButton =\n/** @class */\nfunction (_super) {\n  __extends(PlaidLinkButton, _super);\n\n  function PlaidLinkButton(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.handleButtonClick = function () {\n      _this.plaidLinkHandler.open();\n    };\n\n    _this.handleScriptLoad = function () {\n      _this.setState({\n        scriptLoaded: true\n      });\n\n      _this.plaidLinkHandler = window.Plaid.create(__assign({}, _this.props.plaidLinkProps));\n      if (_this.props.onScriptLoad) _this.props.onScriptLoad();\n    };\n\n    _this.handleScriptError = function () {\n      _this.setState({\n        scriptErrored: true\n      });\n\n      if (_this.props.onScriptError) _this.props.onScriptError();\n    };\n\n    _this.getScriptEl = function () {\n      return document.querySelector(\"script[src=\\\"\" + _this.props.scriptUrl + \"\\\"]\");\n    };\n\n    _this.state = {\n      scriptErrored: false,\n      scriptLoaded: false\n    };\n    return _this;\n  }\n\n  PlaidLinkButton.prototype.componentDidMount = function () {\n    var scriptEl = this.getScriptEl();\n    var scriptAlreadyInserted = scriptEl != null;\n    var scriptAlreadyLoaded = scriptAlreadyInserted && window.Plaid;\n\n    if (scriptAlreadyLoaded) {\n      this.handleScriptLoad();\n      return;\n    }\n\n    if (scriptAlreadyInserted) {\n      scriptEl.addEventListener('load', this.handleScriptLoad);\n      return;\n    }\n\n    scriptEl = document.createElement('script');\n    scriptEl.type = 'text/javascript';\n    scriptEl.src = this.props.scriptUrl;\n    scriptEl.addEventListener('load', this.handleScriptLoad);\n    scriptEl.addEventListener('error', this.handleScriptError);\n    document.head.appendChild(scriptEl);\n  };\n\n  PlaidLinkButton.prototype.componentWillUnmount = function () {\n    var scriptEl = this.getScriptEl();\n\n    if (scriptEl) {\n      scriptEl.removeEventListener('load', this.handleScriptLoad);\n      scriptEl.removeEventListener('error', this.handleScriptError);\n    }\n  };\n\n  PlaidLinkButton.prototype.render = function () {\n    return React.createElement(\"button\", __assign({}, this.props.buttonProps, {\n      disabled: this.state.scriptErrored || !this.state.scriptLoaded,\n      onClick: this.handleButtonClick\n    }), this.props.children);\n  };\n\n  PlaidLinkButton.propTypes = {\n    // Any props set here will be spread onto the top-level button element\n    buttonProps: PropTypes.object,\n    // Used to set the button text\n    children: PropTypes.node,\n    scriptUrl: PropTypes.string,\n    onScriptLoad: PropTypes.func,\n    onScriptError: PropTypes.func,\n    // See: https://plaid.com/docs/api/#integrating-with-link\n    plaidLinkProps: PropTypes.shape({\n      // Displayed once a user has successfully linked their account\n      clientName: PropTypes.string.isRequired,\n      // A list of Plaid product(s) you wish to use. Valid products are : transactions, auth, and identity.\n      // Only institutions that support all requested products will be shown.\n      product: PropTypes.arrayOf(PropTypes.oneOf(['auth', 'transactions', 'identity', 'balance', 'income', 'assets'])).isRequired,\n      // The public_key associated with your account; available from the Dashboard.\n      key: PropTypes.string.isRequired,\n      // The Plaid API environment on which to create user accounts.\n      // For development and testing, use sandbox or development. For production use, use production.\n      // Note: all production requests are billed.\n      env: PropTypes.oneOf(['sandbox', 'development', 'production']).isRequired,\n      // A function that is called when a user has successfully onboarded an Item.\n      // The function should expect two arguments, the public_token and a metadata object.\n      onSuccess: PropTypes.func.isRequired,\n      // A function that is called when a user has specifically exited the Link flow.\n      // The function should expect two arguments, a nullable error object and a metadata object.\n      onExit: PropTypes.func,\n      // A function that is called when a user reaches certain points in the Link flow.\n      // The function should expect two arguments, an eventName string and a metadata object. See onEvent.\n      onEvent: PropTypes.func,\n      // A function that is called when the Link module has finished loading.\n      // Calls to plaidLinkHandler.open() prior to the onLoad callback will be delayed until the module is fully loaded.\n      onLoad: PropTypes.func,\n      // Specify a webhook to associate with an Item.\n      // Plaid fires a webhook when the Item requires updated credentials or when new data is available.\n      webhook: PropTypes.string,\n      // Specify a public_token to launch Link in update mode for a particular Item.\n      // This will cause Link to open directly to the authentication step for that Item's institution.\n      // Use the POST /item/public_token/create endpoint to generate a public_token for an Item.\n      token: PropTypes.string,\n      // Set to true if launching Link within a WebView.\n      isWebView: PropTypes.bool\n    }).isRequired\n  };\n  PlaidLinkButton.defaultProps = {\n    scriptUrl: 'https://cdn.plaid.com/link/v2/stable/link-initialize.js',\n    children: 'Link new account'\n  };\n  return PlaidLinkButton;\n}(React.PureComponent);\n\nexport default PlaidLinkButton;","map":{"version":3,"sources":["/Users/TerminusX/Desktop/budget-app/node_modules/react-plaid-link-button/dist/react-plaid-link-button/react-plaid-link-button.js"],"names":["__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","PropTypes","React","PlaidLinkButton","_super","props","_this","handleButtonClick","plaidLinkHandler","open","handleScriptLoad","setState","scriptLoaded","window","Plaid","plaidLinkProps","onScriptLoad","handleScriptError","scriptErrored","onScriptError","getScriptEl","document","querySelector","scriptUrl","state","componentDidMount","scriptEl","scriptAlreadyInserted","scriptAlreadyLoaded","addEventListener","createElement","type","src","head","appendChild","componentWillUnmount","removeEventListener","render","buttonProps","disabled","onClick","children","propTypes","object","node","string","func","shape","clientName","isRequired","product","arrayOf","oneOf","key","env","onSuccess","onExit","onEvent","onLoad","webhook","token","isWebView","bool","defaultProps","PureComponent"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar PlaidLinkButton = /** @class */ (function (_super) {\n    __extends(PlaidLinkButton, _super);\n    function PlaidLinkButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleButtonClick = function () {\n            _this.plaidLinkHandler.open();\n        };\n        _this.handleScriptLoad = function () {\n            _this.setState({ scriptLoaded: true });\n            _this.plaidLinkHandler = window.Plaid.create(__assign({}, _this.props.plaidLinkProps));\n            if (_this.props.onScriptLoad)\n                _this.props.onScriptLoad();\n        };\n        _this.handleScriptError = function () {\n            _this.setState({ scriptErrored: true });\n            if (_this.props.onScriptError)\n                _this.props.onScriptError();\n        };\n        _this.getScriptEl = function () {\n            return document.querySelector(\"script[src=\\\"\" + _this.props.scriptUrl + \"\\\"]\");\n        };\n        _this.state = {\n            scriptErrored: false,\n            scriptLoaded: false,\n        };\n        return _this;\n    }\n    PlaidLinkButton.prototype.componentDidMount = function () {\n        var scriptEl = this.getScriptEl();\n        var scriptAlreadyInserted = scriptEl != null;\n        var scriptAlreadyLoaded = scriptAlreadyInserted && window.Plaid;\n        if (scriptAlreadyLoaded) {\n            this.handleScriptLoad();\n            return;\n        }\n        if (scriptAlreadyInserted) {\n            scriptEl.addEventListener('load', this.handleScriptLoad);\n            return;\n        }\n        scriptEl = document.createElement('script');\n        scriptEl.type = 'text/javascript';\n        scriptEl.src = this.props.scriptUrl;\n        scriptEl.addEventListener('load', this.handleScriptLoad);\n        scriptEl.addEventListener('error', this.handleScriptError);\n        document.head.appendChild(scriptEl);\n    };\n    PlaidLinkButton.prototype.componentWillUnmount = function () {\n        var scriptEl = this.getScriptEl();\n        if (scriptEl) {\n            scriptEl.removeEventListener('load', this.handleScriptLoad);\n            scriptEl.removeEventListener('error', this.handleScriptError);\n        }\n    };\n    PlaidLinkButton.prototype.render = function () {\n        return (React.createElement(\"button\", __assign({}, this.props.buttonProps, { disabled: this.state.scriptErrored || !this.state.scriptLoaded, onClick: this.handleButtonClick }), this.props.children));\n    };\n    PlaidLinkButton.propTypes = {\n        // Any props set here will be spread onto the top-level button element\n        buttonProps: PropTypes.object,\n        // Used to set the button text\n        children: PropTypes.node,\n        scriptUrl: PropTypes.string,\n        onScriptLoad: PropTypes.func,\n        onScriptError: PropTypes.func,\n        // See: https://plaid.com/docs/api/#integrating-with-link\n        plaidLinkProps: PropTypes.shape({\n            // Displayed once a user has successfully linked their account\n            clientName: PropTypes.string.isRequired,\n            // A list of Plaid product(s) you wish to use. Valid products are : transactions, auth, and identity.\n            // Only institutions that support all requested products will be shown.\n            product: PropTypes.arrayOf(PropTypes.oneOf(['auth', 'transactions', 'identity', 'balance', 'income', 'assets'])).isRequired,\n            // The public_key associated with your account; available from the Dashboard.\n            key: PropTypes.string.isRequired,\n            // The Plaid API environment on which to create user accounts.\n            // For development and testing, use sandbox or development. For production use, use production.\n            // Note: all production requests are billed.\n            env: PropTypes.oneOf(['sandbox', 'development', 'production']).isRequired,\n            // A function that is called when a user has successfully onboarded an Item.\n            // The function should expect two arguments, the public_token and a metadata object.\n            onSuccess: PropTypes.func.isRequired,\n            // A function that is called when a user has specifically exited the Link flow.\n            // The function should expect two arguments, a nullable error object and a metadata object.\n            onExit: PropTypes.func,\n            // A function that is called when a user reaches certain points in the Link flow.\n            // The function should expect two arguments, an eventName string and a metadata object. See onEvent.\n            onEvent: PropTypes.func,\n            // A function that is called when the Link module has finished loading.\n            // Calls to plaidLinkHandler.open() prior to the onLoad callback will be delayed until the module is fully loaded.\n            onLoad: PropTypes.func,\n            // Specify a webhook to associate with an Item.\n            // Plaid fires a webhook when the Item requires updated credentials or when new data is available.\n            webhook: PropTypes.string,\n            // Specify a public_token to launch Link in update mode for a particular Item.\n            // This will cause Link to open directly to the authentication step for that Item's institution.\n            // Use the POST /item/public_token/create endpoint to generate a public_token for an Item.\n            token: PropTypes.string,\n            // Set to true if launching Link within a WebView.\n            isWebView: PropTypes.bool,\n        }).isRequired,\n    };\n    PlaidLinkButton.defaultProps = {\n        scriptUrl: 'https://cdn.plaid.com/link/v2/stable/link-initialize.js',\n        children: 'Link new account',\n    };\n    return PlaidLinkButton;\n}(React.PureComponent));\nexport default PlaidLinkButton;\n"]},"metadata":{},"sourceType":"module"}