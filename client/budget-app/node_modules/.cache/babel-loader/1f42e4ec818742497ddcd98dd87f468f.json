{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_ACCOUNT, DELETE_ACCOUNT, GET_ACCOUNTS, ACCOUNTS_LOADING, GET_TRANSACTIONS, TRANSACTIONS_LOADING } from \"./types\"; // Actions will go here\n// Add account\n\nexport const addAccount = plaidData => dispatch => {\n  const accounts = plaidData.accounts;\n  axios.post(\"/api/plaid/accounts/add\", plaidData).then(res => dispatch({\n    type: ADD_ACCOUNT,\n    payload: res.data\n  })).then(data => accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null).catch(err => console.log(err));\n}; // Delete account\n\nexport const deleteAccount = plaidData => dispatch => {\n  if (window.confirm(\"Are you sure you want to remove this account?\")) {\n    const id = plaidData.id;\n    const newAccounts = plaidData.accounts.filter(account => account._id !== id);\n    axios.delete(`/api/plaid/accounts/${id}`).then(res => dispatch({\n      type: DELETE_ACCOUNT,\n      payload: id\n    })).then(newAccounts ? dispatch(getTransactions(newAccounts)) : null).catch(err => console.log(err));\n  }\n}; // Get all accounts for specific user\n\nexport const getAccounts = () => dispatch => {\n  dispatch(setAccountsLoading());\n  axios.get(\"/api/plaid/accounts\").then(res => dispatch({\n    type: GET_ACCOUNTS,\n    payload: res.data\n  })).then(res => console.log(res)).catch(err => dispatch({\n    type: GET_ACCOUNTS,\n    payload: null\n  }));\n}; // Accounts loading\n\nexport const setAccountsLoading = () => {\n  return {\n    type: ACCOUNTS_LOADING\n  };\n}; // Get Transactions\n\nexport const getTransactions = plaidData => dispatch => {\n  dispatch(setTransactionsLoading());\n  axios.post(\"/api/plaid/accounts/transactions\", plaidData).then(res => dispatch({\n    type: GET_TRANSACTIONS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_TRANSACTIONS,\n    payload: null\n  }));\n}; // Transactions loading\n\nexport const setTransactionsLoading = () => {\n  return {\n    type: TRANSACTIONS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/TerminusX/Desktop/budget-app/client/budget-app/src/actions/accountActions.js"],"names":["axios","ADD_ACCOUNT","DELETE_ACCOUNT","GET_ACCOUNTS","ACCOUNTS_LOADING","GET_TRANSACTIONS","TRANSACTIONS_LOADING","addAccount","plaidData","dispatch","accounts","post","then","res","type","payload","data","getTransactions","concat","catch","err","console","log","deleteAccount","window","confirm","id","newAccounts","filter","account","_id","delete","getAccounts","setAccountsLoading","get","setTransactionsLoading"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  ADD_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING\n} from \"./types\";\n// Actions will go here\n\n// Add account\nexport const addAccount = plaidData => dispatch => {\n    const accounts = plaidData.accounts;\n    axios\n      .post(\"/api/plaid/accounts/add\", plaidData)\n      .then(res =>\n        dispatch({\n          type: ADD_ACCOUNT,\n          payload: res.data\n        })\n      )\n      .then(data =>\n        accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Delete account\nexport const deleteAccount = plaidData => dispatch => {\n    if (window.confirm(\"Are you sure you want to remove this account?\")) {\n      const id = plaidData.id;\n      const newAccounts = plaidData.accounts.filter(\n        account => account._id !== id\n      );\n      axios\n        .delete(`/api/plaid/accounts/${id}`)\n        .then(res =>\n          dispatch({\n            type: DELETE_ACCOUNT,\n            payload: id\n          })\n        )\n        .then(newAccounts ? dispatch(getTransactions(newAccounts)) : null)\n        .catch(err => console.log(err));\n    }\n  };\n\n  // Get all accounts for specific user\nexport const getAccounts = () => dispatch => {\n    dispatch(setAccountsLoading());\n    axios\n      .get(\"/api/plaid/accounts\")\n      .then(res =>\n        dispatch({\n          type: GET_ACCOUNTS,\n          payload: res.data\n        })\n      ).then(res=>console.log(res))\n      .catch(err =>\n        dispatch({\n          type: GET_ACCOUNTS,\n          payload: null\n        })\n      );\n  };\n  // Accounts loading\n  export const setAccountsLoading = () => {\n    return {\n      type: ACCOUNTS_LOADING\n    };\n  };\n\n  // Get Transactions\nexport const getTransactions = plaidData => dispatch => {\n    dispatch(setTransactionsLoading());\n    axios\n      .post(\"/api/plaid/accounts/transactions\", plaidData)\n      .then(res =>\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: res.data\n        })\n      )\n      .catch(err =>\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: null\n        })\n      );\n  };\n  // Transactions loading\n  export const setTransactionsLoading = () => {\n    return {\n      type: TRANSACTIONS_LOADING\n    };\n  };"]},"metadata":{},"sourceType":"module"}