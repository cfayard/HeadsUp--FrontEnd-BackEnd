{"ast":null,"code":"var _jsxFileName = \"/Users/TerminusX/Desktop/budget-app/client/budget-app/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getAccounts, addAccount } from \"../../actions/accountActions\";\nimport Accounts from \"./Accounts\";\nimport Spinner from \"./Spinner\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.handleOnSuccess = (token, metadata) => {\n      const plaidData = {\n        public_token: token,\n        metadata: metadata\n      };\n      this.props.addAccount(plaidData);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAccounts();\n  } // Logout\n\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    const {\n      accounts,\n      accountsLoading\n    } = this.props.plaid;\n    let dashboardContent;\n\n    if (accounts === null || accountsLoading) {\n      dashboardContent = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    } else if (accounts.length > 0) {\n      // User has accounts linked\n      dashboardContent = React.createElement(Accounts, {\n        user: user,\n        accounts: accounts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    } else {\n      // User has no accounts linked\n      dashboardContent = React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col s12 center-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Welcome,\"), \" \", user.name.split(\" \")[0]), React.createElement(\"p\", {\n        className: \"flow-text grey-text text-darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"To get started, link your first bank account below\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(PlaidLinkButton, {\n        buttonProps: {\n          className: \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"\n        },\n        plaidLinkProps: {\n          clientName: \"budget-app\",\n          key: \"065559fb6c1b46df796add99014df6\",\n          env: \"sandbox\",\n          product: [\"transactions\"],\n          onSuccess: this.handleOnSuccess\n        },\n        onScriptLoad: () => this.setState({\n          loaded: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Link Account\")), React.createElement(\"button\", {\n        onClick: this.onLogoutClick,\n        className: \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Logout\"), React.createElement(\"button\", {\n        className: \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        style: {\n          color: \"white\"\n        },\n        href: \"/Budget\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"budget page\"))));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, dashboardContent);\n  }\n\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getAccounts: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  plaid: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  plaid: state.plaid\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  getAccounts,\n  addAccount\n})(Dashboard);","map":{"version":3,"sources":["/Users/TerminusX/Desktop/budget-app/client/budget-app/src/components/dashboard/Dashboard.js"],"names":["React","Component","PlaidLinkButton","PropTypes","connect","logoutUser","getAccounts","addAccount","Accounts","Spinner","Dashboard","onLogoutClick","e","preventDefault","props","handleOnSuccess","token","metadata","plaidData","public_token","componentDidMount","render","user","auth","accounts","accountsLoading","plaid","dashboardContent","length","name","split","className","clientName","key","env","product","onSuccess","setState","loaded","color","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getAccounts, addAccount } from \"../../actions/accountActions\";\n\nimport Accounts from \"./Accounts\";\nimport Spinner from \"./Spinner\";\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getAccounts();\n  }\n// Logout\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n// Add account\n  handleOnSuccess = (token, metadata) => {\n    const plaidData = {\n      public_token: token,\n      metadata: metadata\n    };\nthis.props.addAccount(plaidData);\n  };\nrender() {\n    const { user } = this.props.auth;\n    const { accounts, accountsLoading } = this.props.plaid;\nlet dashboardContent;\nif (accounts === null || accountsLoading) {\n      dashboardContent = <Spinner />\n    } else if (accounts.length > 0) {\n      // User has accounts linked\n      dashboardContent = <Accounts user={user} accounts={accounts} />;\n    } else {\n      // User has no accounts linked\n      dashboardContent = (\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Welcome,</b> {user.name.split(\" \")[0]}\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              To get started, link your first bank account below\n            </p>\n            <div>\n              <PlaidLinkButton\n                buttonProps={{\n                  className:\n                    \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"\n                }}\n                plaidLinkProps={{\n                  clientName: \"budget-app\",\n                  key: \"065559fb6c1b46df796add99014df6\",\n                  env: \"sandbox\",\n                  product: [\"transactions\"],\n                  onSuccess: this.handleOnSuccess\n                }}\n                onScriptLoad={() => this.setState({ loaded: true })}\n              >\n                Link Account\n              </PlaidLinkButton>\n            </div>\n            <button\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"\n              style={{color: 'black'}}\n            >\n              Logout\n            </button>\n            <button\n            className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"\n            >\n              <a style={{\n                color: \"white\"\n              }}href=\"/Budget\">\n                  budget page\n              </a>\n            </button>\n          </div>\n        </div>\n      );\n    }\nreturn <div className=\"container\">{dashboardContent}</div>;\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getAccounts: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  plaid: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  plaid: state.plaid\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser, getAccounts, addAccount }\n)(Dashboard);"]},"metadata":{},"sourceType":"module"}