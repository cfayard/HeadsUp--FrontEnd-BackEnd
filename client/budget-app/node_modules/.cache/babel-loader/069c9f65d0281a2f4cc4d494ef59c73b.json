{"ast":null,"code":"import _classCallCheck from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/TerminusX/Desktop/budget-app/client/budget-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import PlaidLinkButton from\"react-plaid-link-button\";import{connect}from\"react-redux\";import{logoutUser}from\"../../actions/authActions\";import{getAccounts,addAccount}from\"../../actions/accountActions\";import Accounts from\"./Accounts\";import Spinner from\"./Spinner\";var Dashboard=/*#__PURE__*/function(_Component){_inherits(Dashboard,_Component);function Dashboard(){var _getPrototypeOf2;var _this;_classCallCheck(this,Dashboard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.onLogoutClick=function(e){e.preventDefault();_this.props.logoutUser();};_this.handleOnSuccess=function(token,metadata){var plaidData={public_token:token,metadata:metadata};_this.props.addAccount(plaidData);};return _this;}_createClass(Dashboard,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getAccounts();}// Logout\n},{key:\"render\",value:function render(){var _this2=this;var user=this.props.auth.user;var _this$props$plaid=this.props.plaid,accounts=_this$props$plaid.accounts,accountsLoading=_this$props$plaid.accountsLoading;var dashboardContent;if(accounts===null||accountsLoading){dashboardContent=React.createElement(Spinner,null);}else if(accounts.length>0){// User has accounts linked\ndashboardContent=React.createElement(Accounts,{user:user,accounts:accounts});}else{// User has no accounts linked\ndashboardContent=React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col s12 center-align\"},React.createElement(\"h4\",null,React.createElement(\"b\",null,\"Welcome,\"),\" \",user.name.split(\" \")[0]),React.createElement(\"p\",{className:\"flow-text grey-text text-darken-1\"},\"To get started, link your first bank account below\"),React.createElement(\"useLayoutEffect\",null,React.createElement(PlaidLinkButton,{buttonProps:{className:\"btn btn-large waves-effect waves-light hoverable grey accent-3 main-btn\"},plaidLinkProps:{clientName:\"budget-app\",key:\"065559fb6c1b46df796add99014df6\",env:\"sandbox\",product:[\"transactions\"],onSuccess:this.handleOnSuccess},onScriptLoad:function onScriptLoad(){return _this2.setState({loaded:true});}},\"Link Account\")),React.createElement(\"button\",{onClick:this.onLogoutClick,className:\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\",style:{color:'black',marginRight:10,marginLeft:10}},\"Logout\"),React.createElement(\"button\",{className:\"btn btn-large waves-effect waves-light hoverable red accent-3 main-btn\"},React.createElement(\"a\",{style:{color:\"black\"},href:\"/Budget\"},\"budget page\"))));}return React.createElement(\"div\",{className:\"container\"},dashboardContent);}}]);return Dashboard;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,plaid:state.plaid};};export default connect(mapStateToProps,{logoutUser:logoutUser,getAccounts:getAccounts,addAccount:addAccount})(Dashboard);","map":{"version":3,"sources":["/Users/TerminusX/Desktop/budget-app/client/budget-app/src/components/dashboard/Dashboard.js"],"names":["React","Component","PlaidLinkButton","connect","logoutUser","getAccounts","addAccount","Accounts","Spinner","Dashboard","onLogoutClick","e","preventDefault","props","handleOnSuccess","token","metadata","plaidData","public_token","user","auth","plaid","accounts","accountsLoading","dashboardContent","length","name","split","className","clientName","key","env","product","onSuccess","setState","loaded","color","marginRight","marginLeft","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getAccounts, addAccount } from \"../../actions/accountActions\";\n\nimport Accounts from \"./Accounts\";\nimport Spinner from \"./Spinner\";\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getAccounts();\n  }\n// Logout\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n// Add account\n  handleOnSuccess = (token, metadata) => {\n    const plaidData = {\n      public_token: token,\n      metadata: metadata\n    };\n\nthis.props.addAccount(plaidData);\n  };\n\nrender() {\n    const { user } = this.props.auth;\n    const { accounts, accountsLoading } = this.props.plaid;\n\nlet dashboardContent;\n\nif (accounts === null || accountsLoading) {\n      dashboardContent = <Spinner />\n    } else if (accounts.length > 0) {\n      // User has accounts linked\n      dashboardContent = <Accounts user={user} accounts={accounts} />;\n    } else {\n      // User has no accounts linked\n      dashboardContent = (\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Welcome,</b> {user.name.split(\" \")[0]}\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              To get started, link your first bank account below\n            </p>\n            <useLayoutEffect>\n              <PlaidLinkButton \n                buttonProps={{\n\n                  className:\n                    \"btn btn-large waves-effect waves-light hoverable grey accent-3 main-btn\",\n                }}\n                plaidLinkProps={{\n                  clientName: \"budget-app\",\n                  key: \"065559fb6c1b46df796add99014df6\",\n                  env: \"sandbox\",\n                  product: [\"transactions\"],\n                  onSuccess: this.handleOnSuccess\n                }}\n                onScriptLoad={() => this.setState({ loaded: true })}\n\n              >\n                Link Account\n              </PlaidLinkButton>\n            </useLayoutEffect>\n            <button\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"\n              style={{color: 'black', marginRight: 10, marginLeft: 10}}\n            >\n              Logout\n            </button>\n            <button\n            className=\"btn btn-large waves-effect waves-light hoverable red accent-3 main-btn\"\n            >\n              <a style={{\n                color: \"black\"\n              }}href=\"/Budget\">\n                  budget page\n              </a>\n            </button>\n          </div>\n        </div>\n      );\n    }\nreturn <div className=\"container\">{dashboardContent}</div>;\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getAccounts: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  plaid: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  plaid: state.plaid\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser, getAccounts, addAccount }\n)(Dashboard);"]},"metadata":{},"sourceType":"module"}