{"version":3,"sources":["img/credit_card.png","img/Blocks-1.3s-241px (1).gif","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/accountReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","actions/accountActions.js","components/dashboard/Accounts.js","components/dashboard/Spinner.js","components/dashboard/Dashboard.js","components/Chart.js","components/dashboard/Visual.js","components/dashboard/Budget.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","accounts","transactions","accountsLoading","transactionsLoading","combineReducers","auth","state","action","errors","plaid","filter","account","_id","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","style","backgroundColor","fontFamily","color","to","className","src","width","height","frameBorder","Component","Landing","this","props","history","push","credit_card","alt","borderRadius","letterSpacing","connect","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","registerUser","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","addAccount","plaidData","getTransactions","concat","console","log","setAccountsLoading","setTransactionsLoading","tableStyle","padding","Accounts","handleOnSuccess","metadata","public_token","onDeleteClick","accountData","deleteAccount","onLogoutClick","accountItems","map","key","marginRight","onClick","bind","institutionName","transactionsData","forEach","transaction","accountName","date","category","amount","href","split","buttonProps","plaidLinkProps","clientName","env","product","onSuccess","onScriptLoad","loaded","opacity","length","css","columns","title","field","defaultSort","confirm","newAccounts","delete","spinner","margin","display","Dashboard","getAccounts","dashboardContent","Spinner","marginLeft","get","Chart","chartData","labels","datasets","label","options","displayTitle","text","fontSize","legend","displayLegend","position","legendPosition","defaultProps","Visual","paddingTop","useStyles","makeStyles","theme","modal","alignItems","justifyContent","inputUnderline","borderBottomColor","fontColor","paper","border","boxShadow","shadows","spacing","classes","useState","open","setOpen","totalIncome","setTotalIncome","totalBill","setTotalBill","totalExpense","setTotalExpense","totalSavings","setTotalSavings","totalLeisure","setTotalLeisure","totalFood","setTotalFood","totalEmergency","setTotalEmergency","totalGas","setTotalGas","Modal","flexDirection","InputLabel","Input","val","jwtToken","currentTime","Date","now","exp","location","App","exact","path","Budget","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9caca12c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/credit_card.6e1be608.png\";","module.exports = __webpack_public_path__ + \"static/media/Blocks-1.3s-241px (1).0ee0922d.gif\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {router} from 'react-router-dom';\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n \n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n  \n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\nexport const ACCOUNTS_LOADING = \"ACCOUNTS_LOADING\";\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\nexport const TRANSACTIONS_LOADING = \"TRANSACTIONS_LOADING\";","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n  } from \"../actions/types\";\n  const isEmpty = require(\"is-empty\");\n  const initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n  };\n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return {\n          ...state,\n          isAuthenticated: !isEmpty(action.payload),\n          user: action.payload\n        };\n      case USER_LOADING:\n        return {\n          ...state,\n          loading: true\n        };\n      default:\n        return state;\n    }\n  }","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import {\n    ADD_ACCOUNT,\n    DELETE_ACCOUNT,\n    GET_ACCOUNTS,\n    ACCOUNTS_LOADING,\n    GET_TRANSACTIONS,\n    TRANSACTIONS_LOADING\n  } from \"../actions/types\";\n\n  const initialState = {\n    accounts: [],\n    transactions: [],\n    accountsLoading: false,\n    transactionsLoading: false\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case ACCOUNTS_LOADING:\n        return {\n          ...state,\n          accountsLoading: true\n        };\n      case ADD_ACCOUNT:\n        return {\n          ...state,\n          accounts: [action.payload, ...state.accounts]\n        };\n      case DELETE_ACCOUNT:\n        return {\n          ...state,\n          accounts: state.accounts.filter(\n            account => account._id !== action.payload\n          )\n        };\n      case GET_ACCOUNTS:\n        return {\n          ...state,\n          accounts: action.payload,\n          accountsLoading: false\n        };\n      case TRANSACTIONS_LOADING:\n        return {\n          ...state,\n          transactionsLoading: true\n        };\n      case GET_TRANSACTIONS:\n        return {\n          ...state,\n          transactions: action.payload,\n          transactionsLoading: false\n        };\n      default:\n        return state;\n    }\n  }","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport accountReducer from \"./accountReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  plaid: accountReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div  >\n        <nav style={{\n        backgroundColor: \"black\",\n        fontFamily: \"georgia\",\n        color: \"green\"\n      }}  >\n          <div style={{\n        \n        fontFamily: \"georgia\",\n        color: \"green\"\n      }} >\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 brand-logo center black-text\"\n            >\n              <header style={{\n                \n                color: \"springgreen\"\n              }}\n              >\n                Head's Up</header>\n              \n\n            </Link>\n            <iframe src=\"https://giphy.com/embed/26n3JcZS59xgsKXkI\" width=\"100\" height=\"100\"  frameBorder=\"0\"  ></iframe> \n          </div>\n        </nav>\n      </div>\n      \n    );\n  }\n}\nexport default Navbar;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport credit_card from \"../../img/credit_card.png\";\nclass Landing extends Component {\n  componentDidMount() {\n    // If logged in, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\nrender() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <img\n              src={credit_card}\n              style={{ width: \"350px\" }}\n              className=\"responsive-img credit-card\"\n              alt=\"Undraw\"\n            />\n            <h4 className=\"flow-text\">\n               <p style={{\n                color: \"silver\"\n              }}> a personal budgeting app to help you stay on top of your finances.</p>\n              <span style={{ fontFamily: \"monospace\" }}></span> \n            </h4>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\",\n                  color: \"black\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable green accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link style={{\n                  color: \"springgreen\"\n                }}to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable green accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\ncomponentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\nif (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\nconst userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\nthis.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n};\n\nrender() {\n    const { errors } = this.state;\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link style={{ color: 'white'}} to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label  htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div  className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label  htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable green accent-3\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n  const mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n  });\n  export default connect(\n    mapStateToProps,\n    { loginUser }\n  )(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import axios from \"axios\";\nimport {\n  ADD_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING\n} from \"./types\";\n// Actions will go here\n\n// Add account\nexport const addAccount = plaidData => dispatch => {\n    const accounts = plaidData.accounts;\n    axios\n      .post(\"/api/plaid/accounts/add\", plaidData)\n      .then(res =>\n        dispatch({\n          type: ADD_ACCOUNT,\n          payload: res.data\n        })\n      )\n      .then(data =>\n        accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Delete account\nexport const deleteAccount = plaidData => dispatch => {\n    if (window.confirm(\"Are you sure you want to remove this account?\")) {\n      const id = plaidData.id;\n      const newAccounts = plaidData.accounts.filter(\n        account => account._id !== id\n      );\n      axios\n        .delete(`/api/plaid/accounts/${id}`)\n        .then(res =>\n          dispatch({\n            type: DELETE_ACCOUNT,\n            payload: id\n          })\n        )\n        .then(newAccounts ? dispatch(getTransactions(newAccounts)) : null)\n        .catch(err => console.log(err));\n    }\n  };\n\n  // Get all accounts for specific user\nexport const getAccounts = () => dispatch => {\n    dispatch(setAccountsLoading());\n    axios\n      .get(\"/api/plaid/accounts\")\n      .then(res =>\n        dispatch({\n          type: GET_ACCOUNTS,\n          payload: res.data\n        })\n      )\n      .catch(err =>\n        dispatch({\n          type: GET_ACCOUNTS,\n          payload: null\n        })\n      );\n  };\n  // Accounts loading\n  export const setAccountsLoading = () => {\n    return {\n      type: ACCOUNTS_LOADING\n    };\n  };\n\n  // Get Transactions\nexport const getTransactions = plaidData => dispatch => {\n    dispatch(setTransactionsLoading());\n    axios\n      .post(\"/api/plaid/accounts/transactions\", plaidData)\n      .then(res =>\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: res.data\n        })\n      )\n      .catch(err =>\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: null\n        })\n      );\n  };\n  // Transactions loading\n  export const setTransactionsLoading = () => {\n    return {\n      type: TRANSACTIONS_LOADING\n    };\n  };","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getTransactions,\n  addAccount,\n  deleteAccount\n} from \"../../actions/accountActions\";\n\nimport { logoutUser } from \"../../actions/authActions\";\n\nimport MaterialTable from \"material-table\"; // https://mbrn.github.io/material-table/#/\n\nimport { css } from \"emotion\"\n \nconst tableStyle = {\n    \".table-div\": {\n        backgroundColor: \"grey\"\n    },\n    \".table-cell\": {\n        padding: \"0px\"\n    }}\n\nclass Accounts extends Component {\n  componentDidMount() {\n    const { accounts } = this.props;\n    this.props.getTransactions(accounts);\n  }\n// Add account\n  handleOnSuccess = (token, metadata) => {\n    const { accounts } = this.props;\n    const plaidData = {\n      public_token: token,\n      metadata: metadata,\n      accounts: accounts\n    };\nthis.props.addAccount(plaidData);\n  };\n// Delete account\n  onDeleteClick = id => {\n    const { accounts } = this.props;\n    const accountData = {\n      id: id,\n      accounts: accounts\n    };\n    this.props.deleteAccount(accountData);\n  };\n// Logout\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\nrender() {\n    const { user, accounts } = this.props;\n    const { transactions, transactionsLoading } = this.props.plaid;\n\nlet accountItems = accounts.map(account => (\n      <li key={account._id} style={{ marginTop: \"1rem\" }}>\n        <button\n          style={{ marginRight: \"1rem\" }}\n          onClick={this.onDeleteClick.bind(this, account._id)}\n          className=\"btn btn-small btn-floating waves-effect waves-light hoverable red accent-3\"\n        >\n          <i className=\"material-icons\">delete</i>\n        </button>\n        <b>{account.institutionName}</b>\n      </li>\n    ));\n// Setting up data table\n    const transactionsColumns = [\n      { title: \"Account\", field: \"account\" },\n      { title: \"Date\", field: \"date\", type: \"date\", defaultSort: \"desc\" },\n      { title: \"Name\", field: \"name\" },\n      { title: \"Amount\", field: \"amount\" },\n      { title: \"Category\", field: \"category\" }\n    ];\nlet transactionsData = [];\n    transactions.forEach(function(account) {\n      account.transactions.forEach(function(transaction) {\n        transactionsData.push({\n          account: account.accountName,\n          date: transaction.date,\n          category: transaction.category[0],\n          name: transaction.name,\n          amount: transaction.amount\n        });\n      });\n    });\nreturn (\n      <div className=\"row\">\n       \n        <div className=\"col s12\">\n          <button\n            onClick={this.onLogoutClick}\n            className=\"btn-flat waves-effect\"\n          >\n            <i className=\"material-icons left\">keyboard_backspace</i> Log Out\n          </button>\n          <a href='/Budget'>\n          <button\n            \n            className=\"btn-flat waves-effect\"\n          >\n            <i className=\"material-icons left\"></i> Budget\n          </button>\n          </a>\n          <h4>\n            <b>Welcome!</b>\n          </h4>\n          <p className=\"grey-text text-darken-1\">\n            Hey there, {user.name.split(\" \")[0]}\n          </p>\n          <h5>\n            <b>Linked Accounts</b>\n          </h5>\n          <p className=\"grey-text text-darken-1\">\n            Add or remove your bank accounts below\n          </p>\n          <ul>{accountItems}</ul>\n          <PlaidLinkButton\n            buttonProps={{\n              className:\n                \"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"\n            }}\n            \n            plaidLinkProps={{\n              clientName: \"Budget-App\",\n              key: \"c3d4359494f762298793738f10eda6\",\n              env: \"sandbox\",\n              product: [\"transactions\"],\n              onSuccess: this.handleOnSuccess\n            }}\n            onScriptLoad={() => this.setState({ loaded: true })}\n           \n          >\n            Add Account\n          </PlaidLinkButton>\n          <hr style={{ marginTop: \"2rem\", opacity: \".2\" }} />\n          <h5>\n            <b>Transactions</b>\n          </h5>\n          {transactionsLoading ? (\n            <p className=\"grey-text text-darken-1\">Fetching transactions...</p>\n          ) : (\n            <>\n              <p style={{\n                color: 'white'\n              }} className=\"grey-text text-darken-1\">\n                You have <b  style={{\n                  color: \"white\",\n                  backgroundColor: \"green\"\n                }}>{transactionsData.length}</b> transactions from your\n                <b> {accounts.length}</b> linked\n                {accounts.length > 1 ? (\n                  <span> accounts </span>\n                ) : (\n                  <span> accounts </span>\n                )}\n                from the past 90 days\n              </p>\n              <MaterialTable\n              className={css(tableStyle)}\n                columns={transactionsColumns}\n                data={transactionsData}\n                title=\"Search Transactions\"\n              />\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nAccounts.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getTransactions: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  accounts: PropTypes.array.isRequired,\n  plaid: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  plaid: state.plaid\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser, getTransactions, addAccount, deleteAccount }\n)(Accounts);","import React from \"react\";\nimport spinner from \"../../../src/img/Blocks-1.3s-241px (1).gif\";\nexport default () => {\n  return (\n    <div>\n      <img\n        src={spinner}\n        style={{ width: \"100px\", margin: \"auto\", display: \"block\" }}\n        alt=\"Loading...\"\n      />\n    </div>\n  );\n};","import React, { Component } from \"react\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getAccounts, addAccount } from \"../../actions/accountActions\";\n\nimport Accounts from \"./Accounts\";\nimport Spinner from \"./Spinner\";\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getAccounts();\n  }\n// Logout\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n// Add account\n  handleOnSuccess = (token, metadata) => {\n    const plaidData = {\n      public_token: token,\n      metadata: metadata\n    };\n\nthis.props.addAccount(plaidData);\n  };\n\nrender() {\n    const { user } = this.props.auth;\n    const { accounts, accountsLoading } = this.props.plaid;\n\nlet dashboardContent;\n\nif (accounts === null || accountsLoading) {\n      dashboardContent = <Spinner />\n    } else if (accounts.length > 0) {\n      // User has accounts linked\n      dashboardContent = <Accounts user={user} accounts={accounts} />;\n    } else {\n      // User has no accounts linked\n      dashboardContent = (\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Welcome,</b> {user.name.split(\" \")[0]}\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              To get started, link your first bank account below\n            </p>\n            <useLayoutEffect>\n              <PlaidLinkButton \n                buttonProps={{\n\n                  className:\n                    \"btn btn-large waves-effect waves-light hoverable grey accent-3 main-btn\",\n                }}\n                plaidLinkProps={{\n                  clientName: \"budget-app\",\n                  key: \"065559fb6c1b46df796add99014df6\",\n                  env: \"sandbox\",\n                  product: [\"transactions\"],\n                  onSuccess: this.handleOnSuccess\n                }}\n                onScriptLoad={() => this.setState({ loaded: true })}\n\n              >\n                Link Account\n              </PlaidLinkButton>\n            </useLayoutEffect>\n            <button\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\"\n              style={{color: 'black', marginRight: 10, marginLeft: 10}}\n            >\n              Logout\n            </button>\n            <button\n            className=\"btn btn-large waves-effect waves-light hoverable red accent-3 main-btn\"\n            >\n              <a style={{\n                color: \"black\"\n              }}href=\"/Budget\">\n                  budget page\n              </a>\n            </button>\n          </div>\n        </div>\n      );\n    }\nreturn <div className=\"container\">{dashboardContent}</div>;\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getAccounts: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  plaid: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  plaid: state.plaid\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser, getAccounts, addAccount }\n)(Dashboard);","import React, {Component} from 'react'\nimport {Bar, Line, Pie} from 'react-chartjs-2'\nimport Budget from '../components/dashboard/Budget'\n\n// let totalExpenses = this.state.chartData.data[0]+this.state.chartData.data[1]+this.state.chartData.data[2]+this.state.chartData.data[3]+this.state.chartData.data[4]+this.state.chartData.data[5]+this.state.chartData.data[6]\n\nlet totalExpenses = 1200 + 200 + 200 + 250 + 500 + 300 + 20\n\nclass Chart extends Component{\n    constructor(){\n        super();\n        this.state = {\n            chartData: {\n                labels: ['Bills', 'Expenses', 'Savings', 'Gas', 'Leisure','Grocery', 'Emergency'],\n                datasets:[\n                    {\n                        label: 'Amounts',\n                        data: [\n                            1200,\n                            200,\n                            200,\n                            250,\n                            500,\n                            300,\n                            20\n                        ],\n                        backgroundColor:[\n                            'springgreen',\n                            'springgreen',\n                            'springgreen',\n                            'springgreen',\n                            'springgreen',\n                            'springgreen',\n                            'springgreen'\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n\n\n\n\nstatic defaultProps = {\n    displayTitle:true,\n    displayLegend: true,\n    legendPosition:'right'\n}\n\n    render(){\n        return (\n            <div className=\"chart\">\n                \n                <Bar\n                \n                data={this.state.chartData}\n                // width={100}\n                // height={50}\n                options={{\n            title:{\n                display:this.props.displayTitle,\n                text:'Visual Expense Report',\n                fontSize:20\n            },\n            legend:{\n                display:this.props.displayLegend,\n                position:this.props.legendPosition\n        }\n                }}\n            />\n            <p style={{\n                color: 'red',\n                fontSize:20\n            }}>Total Expenses: <p style={{\n                fontSize:18,\n                color:'yellow'\n            }}> $ {totalExpenses}</p></p>\n            </div>\n        )\n    }\n}\n\n\nexport default Chart;","import React, { Component } from \"react\";\n\n\nimport Chart from '../Chart';\n\n\n\nclass Visual extends Component {\n  render() {\n    return (\n        <div style={{\n            paddingTop:100\n        }}>\n            <a href=\"./Budget\">\n                <button className=\"btn-flat waves-effect\">\n                <i className=\"material-icons left\">keyboard_backspace</i> Budget\n                    \n                </button>\n            </a>\n            <Chart />\n        </div>\n    );\n  }\n}\nexport default Visual;","import React, { Component, useState } from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    getTransactions,\n  \n  } from \"../../actions/accountActions\";\n  import { logoutUser } from \"../../actions/authActions\";\n\n  import {Bar, Line, Pie} from 'react-chartjs-2'\n\nimport Visual from '../dashboard/Visual'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'silver'\n    },\n    inputUnderline: {borderBottomColor: \"silver\"},\n    fontColor: {fontColor: \"silver\"},\n    paper: {\n      backgroundColor: \"theme.palette.background.paper\",\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\nconst Budget = props => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [totalIncome, setTotalIncome] = useState(0)\n    const [totalBill, setTotalBill] = useState(0)\n    const [totalExpense, setTotalExpense] = useState(0)\n    const [totalSavings, setTotalSavings] = useState(0)\n    const [totalLeisure, setTotalLeisure] = useState(0)\n    const [totalFood, setTotalFood] = useState(0)\n    const [totalEmergency, setTotalEmergency] = useState(0)\n    const [totalGas, setTotalGas] = useState(0)\n\n  \n\n       \n        return (\n            <div >\n\n                <h1 style={{\n                    fontSize: \"22px\"\n                }}>\n                    If your anything like me, you need to budget....👇\n                </h1>\n                \n                <a href=\"/Dashboard\">\n                    <button style={{color:'black', marginLeft:10,marginRight:10}} className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\">\n                        Linked Accounts\n                    </button>\n                </a>\n                <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\" onClick={()=> setOpen(!open)}>\n                    Projected Budget\n                </button>\n                <a href='/Visual'>\n                <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\" onClick={()=> setOpen(!open)}>\n                    Visual\n                </button>\n                </a>\n                {/* <button style={{color:'black', marginLeft:10,marginRight:10}}className=\"btn btn-large waves-effect waves-light hoverable green accent-3 main-btn\" onClick={()=> setOpen(!open)}>\n                    Dashboard\n                </button> */}\n                \n                  <a href={'/'}>\n                <button onClick={()=>props.logoutUser()} style={{color:'springgreen', marginLeft:10,marginRight:10}}>\n                    Logout\n                </button>\n                </a>  \n\n\n\n                <Modal \n                className={classes.modal}     \n                open={open} \n                >\n                    \n                    <div style={{width:700,height:650, backgroundColor:'black'}}>\n                        <div style={{width:'100%', height:'100%', display:'flex', flexDirection:'row', justifyContent:'space-between'}}>\n                        <div style={{width:'30%'}}>\n                        <div onClick={()=>setOpen(!open)}>X</div>\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Income:\n                        </InputLabel>\n                        <Input \n                            style={{color: 'white'}}\n                            onChange={(val)=>setTotalIncome(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Bills:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalBill(val.target.value)}\n                        />\n                        {totalIncome-totalBill}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Expenses:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalExpense(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Savings:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalSavings(val.target.value)}\n                        />\n                        {/* {(totalSavings/100)*totalIncome} */}\n                        {totalIncome-totalBill-totalExpense-totalSavings}\n\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Gas:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalGas(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Leisure:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalLeisure(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Grocery:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalFood(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood}\n                        <br />\n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}>\n                        Total Emergency:\n                        </InputLabel>\n                        <Input \n                        style={{color: 'white'}}\n                            onChange={(val)=>setTotalEmergency(val.target.value)}\n                        />\n                        {totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency}\n                        <br />\n                        \n                        <InputLabel style={{\n                            color: \"springgreen\"\n                        }}> <div style={{color:'white'}}>\n                            Total Remaining:\n                            <h4 style={{color:'red'}}>{totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas}</h4> </div>\n                        </InputLabel>\n                        \n                        <br />\n                    </div>\n                    \n                   <div style={{width:'70%',paddingTop:'100px'}}>\n                   <Pie\n                   \n                   data={{\n                       labels: ['Bills', 'Expenses', 'Savings', 'Gas', 'Leisure','Grocery', 'Emergency'],\n                       datasets:[\n                           {\n                               label: 'Percent',\n                               data: [\n                                   (totalBill/totalIncome)*0.10 * 100,\n                                   (totalExpense/totalIncome)*0.10 * 100,\n                                   (totalSavings/totalIncome)*0.10 * 100,\n                                   (totalGas/totalIncome)*0.10*100,\n                                  (totalLeisure/totalIncome)*0.10*100,\n                                   (totalFood/totalIncome)*0.10*100,\n                                   (totalEmergency/totalIncome)*0.10*100,\n                                //    (totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas),\n                               ],\n                               backgroundColor:[\n                                'lime',\n                                'orange',\n                                'blue',\n                                'yellow',\n                                'purple',\n                                'aqua',\n                                'springgreen'\n                               ]\n                           }\n                       ]\n                   }}\n                   />\n                   <br />\n                   \n                    <Bar \n                   \n                    data={{\n                        labels: ['Bills', 'Expenses', 'Savings', 'Gas', 'Leisure','Grocery', 'Emergency','Remaining'],\n                        datasets:[\n                            {\n                                label: 'Total',\n                                data: [\n                                    totalBill,\n                                    totalExpense,\n                                    totalSavings,\n                                    totalGas,\n                                    totalLeisure,\n                                    totalFood,\n                                    totalEmergency,\n                                    (totalIncome-totalBill-totalExpense-totalSavings-totalLeisure-totalFood-totalEmergency-totalGas),\n                                    \n                                ],\n                                backgroundColor:[\n                                    'lime',\n                                    'orange',\n                                    'blue',\n                                    'yellow',\n                                    'purple',\n                                    'aqua',\n                                    'springgreen',\n                                    'red'\n                                ]\n                            }\n                        ]\n                    }}\n                    />\n                    <div>\n                    \n                   </div>\n                    </div>\n                    </div>\n                    </div>\n                \n                    \n                     \n                </Modal>\n\n\n            </div>\n            \n        )\n    \n}\n\n  \nconst mapStateToProps = state => ({\n    plaid: state.plaid\n  });\n  export default connect(\n    mapStateToProps,\n    { logoutUser, getTransactions }\n  )(Budget);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Budget from \"./components/dashboard/Budget\";\nimport Visual from \"./components/dashboard/Visual\";\n\nimport \"./App.css\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/budget\" component={Budget} />\n            <Route exact path=\"/visual\" component={Visual} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}